name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  go-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v1
        
      - 
        name: Build with xgo
        uses: crazy-max/ghaction-xgo@v1
        with:
          xgo_version: latest
          go_version: 1.14.2
          dest: build
          prefix: go-sqlite3-sample
          targets: windows/amd64,linux/amd64, linux/arm-7,linux/arm64, darwin/amd64
          v: true
          x: true
          ldflags:  -w -extldflags "-static"
          
      -
        # https://github.com/softprops/action-gh-release
        name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          tag_name: ${{github.run_number}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  docker-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Prepare
        id: prepare
        run: |
          echo ::set-output name=docker_platforms::linux/amd64,linux/arm/v7,linux/arm64
          echo ::set-output name=docker_image::dschowta/${{ github.event.repository.name }}
      -
        name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - 
        name: Docker Buildx (no push)
        run: |
          docker buildx build --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --output "type=image,push=false" \
            --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
            --file Dockerfile .
      - 
        name: Docker Login
        env:
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          echo "${DOCKERHUB_PASSWORD}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      -
        name: Docker Buildx (push)
        run: |
          docker buildx build --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --output "type=image,push=true" \
            --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
            --file Dockerfile .
